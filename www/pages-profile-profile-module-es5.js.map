{"version":3,"sources":["webpack:///src/app/pages/profile/profile.page.html","webpack:///src/app/pages/profile/profile-routing.module.ts","webpack:///src/app/pages/profile/profile.module.ts","webpack:///src/app/pages/profile/profile.page.scss","webpack:///src/app/pages/profile/profile.page.ts"],"names":["routes","path","component","ProfilePageRoutingModule","imports","forChild","exports","ProfilePageModule","declarations","ProfilePage","storage","core","Toast","translate","alertCtrl","routerOutlet","navCtrl","get","subscribe","trans","formUpdate","name","required","email","compose","then","login","reset","patchValue","create","header","message","buttons","text","handler","remove","patchConfig","canGoBack","pop","navigateRoot","alert","present","updating","option","method","body","value","request","res","showShortCenter","save","err","getError","code","showLongCenter","set","inputs","type","placeholder","role","data","handlerPassword","backdropDismiss","showLoading","hideLoading","selector","template"],"mappings":"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","file":"pages-profile-profile-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/home\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>{{'profile.title'|translate}}</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"logout()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"log-out-outline\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div *ngIf=\\\"login && login.id\\\" padding-x2>\\n    <div padding-x2 >\\n      <img border-round margin-auto [src]=\\\"login.avatar||'assets/imgs/person.png'\\\" width=\\\"96px\\\" />\\n    </div>\\n    <ion-list padding-x2 margin-auto class=\\\"ion-no-margin ion-padding-top content\\\">\\n      <form *ngIf=\\\"formUpdate\\\" [formGroup]=\\\"formUpdate\\\" class=\\\"ion-padding-bottom\\\">\\n        <ion-item class=\\\"ion-no-padding\\\">\\n          <ion-label position=\\\"stacked\\\">{{'profile.name'|translate}}</ion-label>\\n          <ion-input formControlName=\\\"name\\\"></ion-input>\\n        </ion-item>\\n        <ion-item class=\\\"ion-no-padding\\\">\\n          <ion-label position=\\\"stacked\\\">{{'profile.email'|translate}}</ion-label>\\n          <ion-input type=\\\"email\\\" formControlName=\\\"email\\\"></ion-input>\\n        </ion-item>\\n      </form>\\n      <ion-button expand=\\\"block\\\" [disabled]=\\\"!formUpdate.valid\\\" (click)=\\\"update()\\\" class=\\\"ion-no-margin\\\">\\n        <span>{{'profile.update'|translate}}</span>\\n        <ion-spinner *ngIf=\\\"updating\\\" spinner-load absolute end name=\\\"lines\\\" color=\\\"light\\\" class=\\\"ion-margin-end\\\"></ion-spinner>\\n      </ion-button>\\n      <!-- Change password button -->\\n      <ion-button margin-auto (click)=\\\"password()\\\" fill=\\\"clear\\\">\\n        <span>{{'profile.password.title'|translate}}</span>\\n      </ion-button>\\n    </ion-list>\\n  </div>\\n</ion-content>\\n\\n<ion-footer>\\n  <ion-toolbar *ngIf=\\\"login && login.id\\\" class=\\\"ion-no-padding\\\">\\n    <ion-button expand=\\\"full\\\" (click)=\\\"keep()\\\" fill=\\\"clear\\\" class=\\\"ion-no-margin\\\">\\n      <span>{{'profile.keep.title'|translate}}</span>\\n    </ion-button>\\n  </ion-toolbar>\\n</ion-footer>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProfilePage } from './profile.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfilePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProfilePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProfilePageRoutingModule } from './profile-routing.module';\n\nimport { ProfilePage } from './profile.page';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { ComponentsModule } from 'src/app/components/components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TranslateModule,\n    ComponentsModule,\n    ReactiveFormsModule,\n    ProfilePageRoutingModule\n  ],\n  declarations: [ProfilePage]\n})\nexport class ProfilePageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Byb2ZpbGUvcHJvZmlsZS5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AlertController, IonRouterOutlet, NavController } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Toast } from '@ionic-native/toast/ngx';\nimport { CoreService } from 'src/app/services/core.service';\nimport { Storage } from '@ionic/storage';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.page.html',\n  styleUrls: ['./profile.page.scss'],\n})\nexport class ProfilePage implements OnInit {\n  // FormGroup control form update project\n  formUpdate: FormGroup;\n  // login data from Storage\n  login: any;\n  // is change profile\n  changing: boolean;\n  // translate for this page\n  trans: Object;\n  // is updating\n  updating: boolean;\n\n  constructor(\n    private storage: Storage,\n    private core: CoreService,\n    private Toast: Toast,\n    translate: TranslateService,\n    private alertCtrl: AlertController,\n    private routerOutlet: IonRouterOutlet,\n    private navCtrl: NavController,\n  ) {\n    // get translate\n    translate.get('profile').subscribe(trans => this.trans = trans);\n    // constructor form update\n    this.formUpdate = new FormGroup({\n      name: new FormControl('', [Validators.required]),\n      email: new FormControl('', Validators.compose([Validators.required, Validators.email]))\n    });\n    // get login data\n    storage.get('login').then(login => {\n      this.login = login;\n      if (!this.login) return;\n      this.reset();\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  reset() {\n    // reset form update\n    this.formUpdate.patchValue({\n      name: this.login['user_display_name'],\n      email: this.login['user_email']\n    });\n  }\n\n  async logout() {\n    // when click logout\n    let alert = await this.alertCtrl.create({\n      header: this.trans['logout']['title'],\n      message: this.trans['logout']['message'],\n      buttons: [\n        {\n          text: this.trans['logout']['yes'],\n          handler: () => {\n            this.storage.remove('login').then(() => {\n              this.core.patchConfig('user_token', null);\n              if (this.routerOutlet.canGoBack()) this.navCtrl.pop();\n              else this.navCtrl.navigateRoot('/home');\n            });\n          }\n        },\n        { text: this.trans['logout']['no'] }\n      ]\n    });\n    alert.present();\n  }\n\n  update() {\n    if (this.updating || !this.login || !this.login['id'] || !this.login['token']) return;\n    // when click update profile\n    this.updating = true;\n    let option = {\n      method: 'POST',\n      body: this.formUpdate.value,\n    };\n    // request update profile\n    this.core.request('users/' + this.login['id'], option, false, true).subscribe(res => {\n      // when request success\n      this.login['user_display_name'] = res['name'];\n      this.login['user_email'] = res['email'];\n      this.reset();\n      this.Toast.showShortCenter(this.trans['success']).subscribe(() => { }, () => { });\n      this.save();\n      this.updating = false;\n    }, err => {\n      // when request error\n      this.updating = false;\n      this.getError(err['error']['code']);\n    });\n  }\n\n  getError(code: string) {\n    // catch error show Toast when update profile error\n    let message: string;\n    if (this.trans['errors'][code]) message = this.trans['errors'][code];\n    else message = this.trans['errors']['default'];\n    this.Toast.showLongCenter(message).subscribe(() => { }, () => { });\n  }\n\n  save() {\n    // update login data on Storage\n    this.storage.set('login', this.login);\n  }\n\n  async password() {\n    let alert = await this.alertCtrl.create({\n      header: this.trans['password']['title'],\n      inputs: [\n        {\n          name: 'password',\n          type: 'password',\n          placeholder: this.trans['password']['new_password']\n        },\n        {\n          name: 'repass',\n          type: 'password',\n          placeholder: this.trans['password']['confirm_password']\n        }\n      ],\n      buttons: [\n        {\n          text: this.trans['password']['yes'],\n          role: 'send-password',\n          handler: data => {\n            if (!data['password'] || !data['repass']) return false;\n            if (data['password'] != data['repass']) {\n              this.Toast.showLongCenter(this.trans['errors']['password_mismatch']).subscribe(() => { }, () => { });\n              return false;\n            }\n            this.handlerPassword(data);\n          }\n        },\n        { text: this.trans['password']['no'] }\n      ],\n      backdropDismiss: false\n    });\n    alert.present();\n  }\n\n  async handlerPassword(data) {\n    // if request change password\n    this.core.showLoading();\n    let option = {\n      method: 'POST',\n      body: data,\n    };\n    // request change password\n    this.core.request('users/' + this.login['id'], option, false, true).subscribe(res => {\n      // when request success\n      this.core.hideLoading();\n      this.Toast.showShortCenter(this.trans['password']['success']).subscribe(() => { }, () => { });\n    }, err => {\n      // when request error\n      this.core.hideLoading();\n      this.getError(err['error']['code']);\n    });\n  }\n\n  async keep() {\n    // removing other session\n    let alert = await this.alertCtrl.create({\n      header: this.trans['keep']['title'],\n      message: this.trans['keep']['message'],\n      buttons: [\n        {\n          text: this.trans['keep']['yes'],\n          handler: async () => {\n            let option = { method: 'POST' };\n            this.core.showLoading();\n            // request removing other session\n            this.core.request('m_users/keep', option, false, true).subscribe(res => {\n              // when request success\n              let message: string;\n              if (res) message = this.trans['keep']['success'];\n              else message = this.trans['keep']['error'];\n              this.core.hideLoading();\n              this.Toast.showShortCenter(message).subscribe(() => { }, () => { });\n            }, err => {\n              // when request error\n              this.core.hideLoading();\n              this.getError(err['error']['code']);\n            });\n          }\n        },\n        { text: this.trans['keep']['no'] }\n      ]\n    });\n    alert.present();\n  }\n}\n"]}