{"version":3,"file":"index.d.ts","sources":["index.d.ts"],"names":[],"mappingssourcesContent":["import { IonicNativePlugin } from '@ionic-native/core';\nimport { Observable } from 'rxjs';\nexport declare type SpeechRecognitionListeningOptions = SpeechRecognitionListeningOptionsIOS | SpeechRecognitionListeningOptionsAndroid;\nexport interface SpeechRecognitionListeningOptionsIOS {\n    /**\n     * used language for recognition (default `\"en-US\"`)\n     */\n    language?: string;\n    /**\n     * umber of return matches (default `5`)\n     */\n    matches?: number;\n    /**\n     * Allow partial results to be returned (default `false`)\n     */\n    showPartial?: boolean;\n}\nexport interface SpeechRecognitionListeningOptionsAndroid {\n    /**\n     * used language for recognition (default `\"en-US\"`)\n     */\n    language?: string;\n    /**\n     * number of return matches (maximum number of matches)\n     */\n    matches?: number;\n    /**\n     * displayed prompt of listener popup window\n     */\n    prompt?: string;\n    /**\n     * display listener popup window with prompt (default `true`)\n     */\n    showPopup?: boolean;\n    /**\n     * Allow partial results to be returned (default `false`)\n     */\n    showPartial?: boolean;\n}\n/**\n * @name Speech Recognition\n * @description\n * This plugin does speech recognition using cloud services\n *\n * @usage\n * ```typescript\n * import { SpeechRecognition } from '@ionic-native/speech-recognition/ngx';\n *\n * constructor(private speechRecognition: SpeechRecognition) { }\n *\n * ...\n *\n *\n *\n * // Check feature available\n * this.speechRecognition.isRecognitionAvailable()\n *   .then((available: boolean) => console.log(available))\n *\n * // Start the recognition process\n * this.speechRecognition.startListening(options)\n *   .subscribe(\n *     (matches: string[]) => console.log(matches),\n *     (onerror) => console.log('error:', onerror)\n *   )\n *\n * // Stop the recognition process (iOS only)\n * this.speechRecognition.stopListening()\n *\n * // Get the list of supported languages\n * this.speechRecognition.getSupportedLanguages()\n *   .then(\n *     (languages: string[]) => console.log(languages),\n *     (error) => console.log(error)\n *   )\n *\n * // Check permission\n * this.speechRecognition.hasPermission()\n *   .then((hasPermission: boolean) => console.log(hasPermission))\n *\n * // Request permissions\n * this.speechRecognition.requestPermission()\n *   .then(\n *     () => console.log('Granted'),\n *     () => console.log('Denied')\n *   )\n *\n * ```\n */\nexport declare class SpeechRecognition extends IonicNativePlugin {\n    /**\n     * Check feature available\n     * @return {Promise<boolean>}\n     */\n    isRecognitionAvailable(): Promise<boolean>;\n    /**\n     * Start the recognition process\n     * @return {Promise< string[] >} list of recognized terms\n     */\n    startListening(options?: SpeechRecognitionListeningOptions): Observable<string[]>;\n    /**\n     * Stop the recognition process\n     */\n    stopListening(): Promise<void>;\n    /**\n     * Get the list of supported languages\n     * @return {Promise< string[] >} list of languages\n     */\n    getSupportedLanguages(): Promise<string[]>;\n    /**\n     * Check permission\n     * @return {Promise<boolean>} has permission\n     */\n    hasPermission(): Promise<boolean>;\n    /**\n     * Request permissions\n     * @return {Promise<void>}\n     */\n    requestPermission(): Promise<void>;\n}\n"]}