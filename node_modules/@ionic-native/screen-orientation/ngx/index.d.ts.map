{"version":3,"file":"index.d.ts","sources":["index.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { IonicNativePlugin } from '@ionic-native/core';\nimport { Observable } from 'rxjs';\n/**\n * @name Screen Orientation\n * @premier screen-orientation\n * @description\n * Cordova plugin to set/lock the screen orientation in a common way.\n *\n * Requires Cordova plugin: `cordova-plugin-screen-orientation`. For more info, please see the [Screen Orientation plugin docs](https://github.com/apache/cordova-plugin-screen-orientation).\n *\n * @usage\n * ```typescript\n * import { ScreenOrientation } from '@ionic-native/screen-orientation/ngx';\n *\n * constructor(private screenOrientation: ScreenOrientation) { }\n *\n * ...\n *\n *\n * // get current\n * console.log(this.screenOrientation.type); // logs the current orientation, example: 'landscape'\n *\n * // set to landscape\n * this.screenOrientation.lock(this.screenOrientation.ORIENTATIONS.LANDSCAPE);\n *\n * // allow user rotate\n * this.screenOrientation.unlock();\n *\n * // detect orientation changes\n * this.screenOrientation.onChange().subscribe(\n *    () => {\n *        console.log(\"Orientation Changed\");\n *    }\n * );\n *\n * ```\n *\n * @advanced\n *\n * Accepted orientation values:\n *\n * | Value                         | Description                                                                  |\n * |-------------------------------|------------------------------------------------------------------------------|\n * | portrait-primary              | The orientation is in the primary portrait mode.                             |\n * | portrait-secondary            | The orientation is in the secondary portrait mode.                           |\n * | landscape-primary             | The orientation is in the primary landscape mode.                            |\n * | landscape-secondary           | The orientation is in the secondary landscape mode.                          |\n * | portrait                      | The orientation is either portrait-primary or portrait-secondary (sensor).   |\n * | landscape                     | The orientation is either landscape-primary or landscape-secondary (sensor). |\n *\n */\nexport declare class ScreenOrientation extends IonicNativePlugin {\n    /**\n     * Convenience enum for possible orientations\n     */\n    ORIENTATIONS: {\n        PORTRAIT_PRIMARY: string;\n        PORTRAIT_SECONDARY: string;\n        LANDSCAPE_PRIMARY: string;\n        LANDSCAPE_SECONDARY: string;\n        PORTRAIT: string;\n        LANDSCAPE: string;\n        ANY: string;\n    };\n    /**\n     * Listen to orientation change event\n     * @return {Observable<void>}\n     */\n    onChange(): Observable<void>;\n    /**\n     * Lock the orientation to the passed value.\n     * See below for accepted values\n     * @param orientation {string} The orientation which should be locked. Accepted values see table above.\n     * @return {Promise<any>}\n     */\n    lock(orientation: string): Promise<any>;\n    /**\n     * Unlock and allow all orientations.\n     */\n    unlock(): void;\n    /**\n     * Get the current orientation of the device.\n     */\n    type: string;\n}\n"]}