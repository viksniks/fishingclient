import { __decorate, __extends } from "tslib";
import { Injectable } from '@angular/core';
import { IonicNativePlugin, cordova } from '@ionic-native/core';
var TextToSpeech = /** @class */ (function (_super) {
    __extends(TextToSpeech, _super);
    function TextToSpeech() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TextToSpeech.prototype.speak = function (textOrOptions) { return cordova(this, "speak", { "successIndex": 1, "errorIndex": 2 }, arguments); };
    TextToSpeech.prototype.stop = function () { return cordova(this, "stop", {}, arguments); };
    TextToSpeech.pluginName = "Text To Speech";
    TextToSpeech.plugin = "cordova-plugin-tts";
    TextToSpeech.pluginRef = "TTS";
    TextToSpeech.repo = "https://github.com/vilic/cordova-plugin-tts";
    TextToSpeech.platforms = ["Android", "iOS", "Windows Phone 8"];
    TextToSpeech = __decorate([
        Injectable()
    ], TextToSpeech);
    return TextToSpeech;
}(IonicNativePlugin));
export { TextToSpeech };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvQGlvbmljLW5hdGl2ZS9wbHVnaW5zL3RleHQtdG8tc3BlZWNoL25neC9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLDhCQUFzQyxNQUFNLG9CQUFvQixDQUFDOztJQXdDdEMsZ0NBQWlCOzs7O0lBVWpELDRCQUFLLGFBQUMsYUFBa0M7SUFTeEMsMkJBQUk7Ozs7OztJQW5CTyxZQUFZO1FBRHhCLFVBQVUsRUFBRTtPQUNBLFlBQVk7dUJBekN6QjtFQXlDa0MsaUJBQWlCO1NBQXRDLFlBQVkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb3Jkb3ZhLCBJb25pY05hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcblxuZXhwb3J0IGludGVyZmFjZSBUVFNPcHRpb25zIHtcbiAgLyoqIHRleHQgdG8gc3BlYWsgKi9cbiAgdGV4dDogc3RyaW5nO1xuICAvKiogYSBzdHJpbmcgbGlrZSAnZW4tVVMnLCAnemgtQ04nLCBldGMgKi9cbiAgbG9jYWxlPzogc3RyaW5nO1xuICAvKiogc3BlZWQgcmF0ZSwgMCB+IDEgKi9cbiAgcmF0ZT86IG51bWJlcjtcbn1cblxuLyoqXG4gKiBAbmFtZSBUZXh0IFRvIFNwZWVjaFxuICogQGRlc2NyaXB0aW9uXG4gKiBUZXh0IHRvIFNwZWVjaCBwbHVnaW5cbiAqXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IFRleHRUb1NwZWVjaCB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvdGV4dC10by1zcGVlY2gvbmd4JztcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIHR0czogVGV4dFRvU3BlZWNoKSB7IH1cbiAqXG4gKiAuLi5cbiAqXG4gKiB0aGlzLnR0cy5zcGVhaygnSGVsbG8gV29ybGQnKVxuICogICAudGhlbigoKSA9PiBjb25zb2xlLmxvZygnU3VjY2VzcycpKVxuICogICAuY2F0Y2goKHJlYXNvbjogYW55KSA9PiBjb25zb2xlLmxvZyhyZWFzb24pKTtcbiAqXG4gKiBgYGBcbiAqIEBpbnRlcmZhY2VzXG4gKiBUVFNPcHRpb25zXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnVGV4dCBUbyBTcGVlY2gnLFxuICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi10dHMnLFxuICBwbHVnaW5SZWY6ICdUVFMnLFxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL3ZpbGljL2NvcmRvdmEtcGx1Z2luLXR0cycsXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ2lPUycsICdXaW5kb3dzIFBob25lIDgnXSxcbn0pXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgVGV4dFRvU3BlZWNoIGV4dGVuZHMgSW9uaWNOYXRpdmVQbHVnaW4ge1xuICAvKipcbiAgICogVGhpcyBmdW5jdGlvbiBzcGVha3NcbiAgICogQHBhcmFtIHRleHRPck9wdGlvbnMge3N0cmluZyB8IFRUU09wdGlvbnN9IFRleHQgdG8gc3BlYWsgb3IgVFRTT3B0aW9uc1xuICAgKiBAcmV0dXJuIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2hlbiB0aGUgc3BlYWtpbmcgZmluaXNoZXNcbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBzdWNjZXNzSW5kZXg6IDEsXG4gICAgZXJyb3JJbmRleDogMixcbiAgfSlcbiAgc3BlYWsodGV4dE9yT3B0aW9uczogc3RyaW5nIHwgVFRTT3B0aW9ucyk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIFN0b3AgYW55IGN1cnJlbnQgVFRTIHBsYXliYWNrXG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgc3RvcCgpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxufVxuIl19