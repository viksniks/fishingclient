{"version":3,"file":"index.d.ts","sources":["index.d.ts"],"names":[],"mappingssourcesContent":["import { IonicNativePlugin } from '@ionic-native/core';\nimport { Observable } from 'rxjs';\nexport interface AdMobFreeBannerConfig {\n    /**\n     * Ad Unit ID\n     */\n    id?: string;\n    /**\n     * Receiving test ad\n     */\n    isTesting?: boolean;\n    /**\n     * Auto show ad when loaded\n     */\n    autoShow?: boolean;\n    /**\n     * Child-directed setting. Default is not calling `tagForChildDirectedTreatment`.\n     * Set to `true` for `tagForChildDirectedTreatment(true)`.\n     * Set to `false` for `tagForChildDirectedTreatment(false)`.\n     */\n    forChild?: boolean | null;\n    /**\n     * Designed for Families setting. Android-only. Default is not calling setIsDesignedForFamilies.\n     * Set to `true` for `setIsDesignedForFamilies(true)`.\n     * Set to `false` for `setIsDesignedForFamilies(false)`.\n     */\n    forFamily?: boolean | null;\n    /**\n     * Location targeting. It accept an array in the form of `[latitude, longitude]`.\n     * Android-only. Default is not calling `setLatitude` and `setLongitude`.\n     */\n    location?: number[] | null;\n    /**\n     * Set to true, to put banner at top\n     */\n    bannerAtTop?: boolean;\n    /**\n     * Set to true, to allow banner overlap WebView\n     */\n    overlap?: boolean;\n    /**\n     * Set to true to avoid ios7 status bar overlap\n     */\n    offsetTopBar?: boolean;\n    /**\n     * Banner  size\n     */\n    size?: string;\n}\nexport interface AdMobFreeInterstitialConfig {\n    /**\n     * Ad Unit ID\n     */\n    id?: string;\n    /**\n     * Receiving test ad\n     */\n    isTesting?: boolean;\n    /**\n     * Auto show ad when loaded\n     */\n    autoShow?: boolean;\n    /**\n     * Child-directed setting. Default is not calling `tagForChildDirectedTreatment`.\n     * Set to `true` for `tagForChildDirectedTreatment(true)`.\n     * Set to `false` for `tagForChildDirectedTreatment(false)`.\n     */\n    forChild?: boolean | null;\n    /**\n     * Designed for Families setting. Android-only. Default is not calling setIsDesignedForFamilies.\n     * Set to `true` for `setIsDesignedForFamilies(true)`.\n     * Set to `false` for `setIsDesignedForFamilies(false)`.\n     */\n    forFamily?: boolean | null;\n    /**\n     * Location targeting. It accept an array in the form of `[latitude, longitude]`.\n     * Android-only. Default is not calling `setLatitude` and `setLongitude`.\n     */\n    location?: number[] | null;\n}\nexport interface AdMobFreeRewardVideoConfig {\n    /**\n     * Ad Unit ID\n     */\n    id?: string;\n    /**\n     * Receiving test ad\n     */\n    isTesting?: boolean;\n    /**\n     * Auto show ad when loaded\n     */\n    autoShow?: boolean;\n    /**\n     * Child-directed setting. Default is not calling `tagForChildDirectedTreatment`.\n     * Set to `true` for `tagForChildDirectedTreatment(true)`.\n     * Set to `false` for `tagForChildDirectedTreatment(false)`.\n     */\n    forChild?: boolean | null;\n    /**\n     * Designed for Families setting. Android-only. Default is not calling setIsDesignedForFamilies.\n     * Set to `true` for `setIsDesignedForFamilies(true)`.\n     * Set to `false` for `setIsDesignedForFamilies(false)`.\n     */\n    forFamily?: boolean | null;\n    /**\n     * Location targeting. It accept an array in the form of `[latitude, longitude]`.\n     * Android-only. Default is not calling `setLatitude` and `setLongitude`.\n     */\n    location?: number[] | null;\n}\n/**\n * @name AdMob Free\n * @description\n * A free, no ad-sharing version of Google AdMob plugin for Cordova.\n *\n * Requires Cordova plugin: `cordova-plugin-admob-free`. For more info, please see the [AdMob Free plugin docs](https://github.com/ratson/cordova-plugin-admob-free).\n *\n * @usage\n * ```typescript\n * import { AdMobFree, AdMobFreeBannerConfig } from '@ionic-native/admob-free/ngx';\n *\n *\n * constructor(private admobFree: AdMobFree) { }\n *\n *\n * ...\n *\n *\n * const bannerConfig: AdMobFreeBannerConfig = {\n *  // add your config here\n *  // for the sake of this example we will just use the test config\n *  isTesting: true,\n *  autoShow: true\n * };\n * this.admobFree.banner.config(bannerConfig);\n *\n * this.admobFree.banner.prepare()\n *   .then(() => {\n *     // banner Ad is ready\n *     // if we set autoShow to false, then we will need to call the show method here\n *   })\n *   .catch(e => console.log(e));\n *\n *\n * ```\n * @interfaces\n * AdMobFreeBannerConfig\n * AdMobFreeInterstitialConfig\n * AdMobFreeRewardVideoConfig\n * @classes\n * AdMobFreeBanner\n * AdMobFreeInterstitial\n * AdMobFreeRewardVideo\n */\nexport declare class AdMobFree extends IonicNativePlugin {\n    /**\n     * Convenience object to get event names\n     * @type {Object}\n     */\n    events: {\n        BANNER_LOAD: string;\n        BANNER_LOAD_FAIL: string;\n        BANNER_OPEN: string;\n        BANNER_CLOSE: string;\n        BANNER_EXIT_APP: string;\n        INTERSTITIAL_LOAD: string;\n        INTERSTITIAL_LOAD_FAIL: string;\n        INTERSTITIAL_OPEN: string;\n        INTERSTITIAL_CLOSE: string;\n        INTERSTITIAL_EXIT_APP: string;\n        REWARD_VIDEO_LOAD: string;\n        REWARD_VIDEO_LOAD_FAIL: string;\n        REWARD_VIDEO_OPEN: string;\n        REWARD_VIDEO_CLOSE: string;\n        REWARD_VIDEO_EXIT_APP: string;\n        REWARD_VIDEO_START: string;\n        REWARD_VIDEO_REWARD: string;\n    };\n    /**\n     * Watch an event\n     * @param event {string} event name\n     * @return {Observable<any>}\n     */\n    on(event: string): Observable<any>;\n    /**\n     * Returns the AdMobFreeBanner object\n     * @type {AdMobFreeBanner}\n     */\n    banner: AdMobFreeBanner;\n    /**\n     * Returns the AdMobFreeInterstitial object\n     * @type {AdMobFreeInterstitial}\n     */\n    interstitial: AdMobFreeInterstitial;\n    /**\n     * Returns the AdMobFreeRewardVideo object\n     * @type {AdMobFreeRewardVideo}\n     */\n    rewardVideo: AdMobFreeRewardVideo;\n}\n/**\n * @hidden\n */\nexport declare class AdMobFreeBanner extends IonicNativePlugin {\n    /**\n     * Update config\n     * @param options\n     * @return {AdMobFreeBannerConfig}\n     */\n    config(options: AdMobFreeBannerConfig): AdMobFreeBannerConfig;\n    /**\n     * Hide the banner\n     * @return {Promise<any>}\n     */\n    hide(): Promise<any>;\n    /**\n     * Create banner\n     * @return {Promise<any>}\n     */\n    prepare(): Promise<any>;\n    /**\n     * Remove the banner\n     * @return {Promise<any>}\n     */\n    remove(): Promise<any>;\n    /**\n     * Show the banner\n     * @return {Promise<any>}\n     */\n    show(): Promise<any>;\n}\n/**\n * @hidden\n */\nexport declare class AdMobFreeInterstitial extends IonicNativePlugin {\n    /**\n     * Update config\n     * @param options\n     * @return {AdMobFreeInterstitialConfig}\n     */\n    config(options: AdMobFreeInterstitialConfig): AdMobFreeInterstitialConfig;\n    /**\n     * Check if interstitial is ready\n     * @return {Promise<any>}\n     */\n    isReady(): Promise<any>;\n    /**\n     * Prepare interstitial\n     * @return {Promise<any>}\n     */\n    prepare(): Promise<any>;\n    /**\n     * Show the interstitial\n     * @return {Promise<any>}\n     */\n    show(): Promise<any>;\n}\n/**\n * @hidden\n */\nexport declare class AdMobFreeRewardVideo extends IonicNativePlugin {\n    /**\n     * Update config\n     * @param {AdMobFreeRewardVideoConfig} options Admob reward config\n     * @return {AdMobFreeRewardVideoConfig}\n     */\n    config(options: AdMobFreeRewardVideoConfig): AdMobFreeRewardVideoConfig;\n    /**\n     * Check if reward video is ready\n     * @return {Promise<any>}\n     */\n    isReady(): Promise<any>;\n    /**\n     * Prepare reward video\n     * @return {Promise<any>}\n     */\n    prepare(): Promise<any>;\n    /**\n     * Show the reward video\n     * @return {Promise<any>}\n     */\n    show(): Promise<any>;\n}\n"]}