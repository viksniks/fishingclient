{"version":3,"sources":["./src/app/pages/images/images.page.html","./src/app/pages/images/images-routing.module.ts","./src/app/pages/images/images.module.ts","./src/app/pages/images/images.page.scss","./src/app/pages/images/images.page.ts"],"names":[],"mappings":"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","file":"pages-images-images-module-es2015.js","sourcesContent":["export default \"<ion-content #content>\\n  <!-- Refresh -->\\n  <app-refresher slot=\\\"fixed\\\" [disabled]=\\\"!loaded\\\" (ionRefresh)=\\\"doRefresh($event)\\\"></app-refresher>\\n  <!-- no data -->\\n  <app-no-data *ngIf=\\\"loaded && (!posts || posts.length < 1)\\\"></app-no-data>\\n  <!-- loading -->\\n  <app-loading *ngIf=\\\"!loaded\\\"></app-loading>\\n  <!-- List posts -->\\n  <app-list-posts *ngIf=\\\"posts\\\" [posts]=\\\"posts\\\" templates=\\\"card\\\"></app-list-posts>\\n  <!-- Load more -->\\n  <app-infinite-scroll threshold=\\\"45%\\\" (ionInfinite)=\\\"load($event)\\\" *ngIf=\\\"!over && posts?.length > 0\\\"></app-infinite-scroll>\\n  <!-- Go to top -->\\n  <app-goto-top slot=\\\"fixed\\\" [content]=\\\"content\\\"></app-goto-top>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ImagesPage } from './images.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ImagesPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ImagesPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ImagesPageRoutingModule } from './images-routing.module';\n\nimport { ImagesPage } from './images.page';\nimport { ComponentsModule } from 'src/app/components/components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ComponentsModule,\n    ImagesPageRoutingModule\n  ],\n  declarations: [ImagesPage]\n})\nexport class ImagesPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2ltYWdlcy9pbWFnZXMucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { CoreService } from 'src/app/services/core.service';\n\n@Component({\n  selector: 'app-images',\n  templateUrl: './images.page.html',\n  styleUrls: ['./images.page.scss'],\n})\nexport class ImagesPage implements OnInit {\n  // page of posts\n  page = 1;\n  // array Play posts\n  posts: Object[];\n  // set true when loaded posts\n  loaded: boolean;\n  // true if haven't posts when load more disable infiniteScroll\n  over: boolean;\n\n  constructor(\n    private core: CoreService,\n  ) {\n    this.getPosts();\n  }\n\n  ngOnInit() {\n  }\n\n  getPosts(refresher?, infiniteScroll?) {\n    // get posts with page then concat to list post\n    let params = { format: 'image', page: (refresher ? 1 : this.page) };\n    this.core.getPosts(params).subscribe(posts => {\n      if (refresher) this.page = 1;\n      if (posts.length > 0) this.page++;\n      else this.over = true;\n      if (infiniteScroll) {\n        this.posts = this.posts.concat(posts);\n        infiniteScroll.target.complete();\n      }\n      else this.posts = posts;\n      this.loaded = true;\n      if (refresher) refresher.target.complete();\n    }, err => {\n      if (infiniteScroll) infiniteScroll.target.complete();\n      if (refresher) refresher.target.complete();\n      this.loaded = true;\n    });\n  }\n\n  doRefresh(refresher) {\n    // when refresh\n    this.over = false;\n    this.core.updateTime();\n    this.getPosts(refresher);\n  }\n\n  load(infiniteScroll) {\n    // when scroll to bottom\n    this.getPosts(null, infiniteScroll);\n  }\n}\n"],"sourceRoot":"webpack:///"}