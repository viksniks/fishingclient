{"version":3,"sources":["webpack:///src/app/pages/favorites-setting/favorites-setting.page.html","webpack:///src/app/pages/favorites-setting/favorites-setting-routing.module.ts","webpack:///src/app/pages/favorites-setting/favorites-setting.module.ts","webpack:///src/app/pages/favorites-setting/favorites-setting.page.scss","webpack:///src/app/pages/favorites-setting/favorites-setting.page.ts"],"names":["routes","path","component","FavoritesSettingPageRoutingModule","imports","forChild","exports","FavoritesSettingPageModule","declarations","FavoritesSettingPage","storage","core","getFavorites","get","then","res","favorites","getCategories","refresher","request","subscribe","categories","applyFavorites","target","complete","loaded","err","length","forEach","category","indexOf","check","push","set","saved","setTimeout","selector","template","encapsulation","None"],"mappings":"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","file":"favorites-setting-favorites-setting-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar no-padding-important class=\\\"ion-no-padding\\\">\\n    <ion-item lines=\\\"none\\\">\\n      <ion-label>\\n        <span tappable primary (click)=\\\"checkAll()\\\">{{'favorites.chose'|translate}}</span>\\n      </ion-label>\\n      <ion-button size=\\\"small\\\" slot=\\\"end\\\" fill=\\\"outline\\\" [color]=\\\"saved?'primary':'dark'\\\" (click)=\\\"save()\\\">\\n        <span *ngIf=\\\"!saved\\\">{{'favorites.save'|translate}}</span>\\n        <span *ngIf=\\\"saved\\\">{{'favorites.saved'|translate}}</span>\\n      </ion-button>\\n    </ion-item>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <!-- Refresh -->\\n  <app-refresher slot=\\\"fixed\\\" [disabled]=\\\"!loaded\\\" (ionRefresh)=\\\"getCategories($event)\\\"></app-refresher>\\n  <!-- no data -->\\n  <app-no-data *ngIf=\\\"loaded && (!categories || categories.length < 1)\\\"></app-no-data>\\n  <!-- loading -->\\n  <app-loading *ngIf=\\\"!loaded\\\"></app-loading>\\n  <!-- list categories -->\\n  <ion-list *ngIf=\\\"categories && categories.length > 0\\\">\\n    <ion-item *ngFor=\\\"let category of categories\\\" lines=\\\"none\\\">\\n      <ion-label [innerHTML]=\\\"category.name\\\"></ion-label>\\n      <ion-checkbox [(ngModel)]=\\\"category.favorite\\\"></ion-checkbox>\\n    </ion-item>\\n  </ion-list>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { FavoritesSettingPage } from './favorites-setting.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FavoritesSettingPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FavoritesSettingPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { FavoritesSettingPageRoutingModule } from './favorites-setting-routing.module';\n\nimport { FavoritesSettingPage } from './favorites-setting.page';\nimport { ComponentsModule } from 'src/app/components/components.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ComponentsModule,\n    TranslateModule,\n    FavoritesSettingPageRoutingModule\n  ],\n  declarations: [FavoritesSettingPage]\n})\nexport class FavoritesSettingPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2Zhdm9yaXRlcy1zZXR0aW5nL2Zhdm9yaXRlcy1zZXR0aW5nLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { CoreService } from 'src/app/services/core.service';\nimport { Storage } from '@ionic/storage';\n\n@Component({\n  selector: 'app-favorites-setting',\n  templateUrl: './favorites-setting.page.html',\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./favorites-setting.page.scss'],\n})\nexport class FavoritesSettingPage implements OnInit {\n  // list categories id in favorites\n  favorites: Number[];\n  // list categories\n  categories: Object[];\n  // set true when loaded categories\n  loaded: boolean;\n  // set true when saved favorites to storage\n  saved: boolean;\n\n  constructor(\n    private storage: Storage,\n    private core: CoreService,\n  ) {\n    this.getFavorites();\n  }\n\n  ngOnInit() {\n  }\n\n  getFavorites() {\n    // get favorites from Storage\n    this.storage.get('favorites').then(res => {\n      this.favorites = res;\n      this.getCategories();\n    });\n  }\n\n  getCategories(refresher?) {\n    // request get categories from website\n    this.core.request('m_categories').subscribe(res => {\n      this.categories = res;\n      this.applyFavorites();\n      if (refresher) refresher.target.complete();\n      this.loaded = true;\n    }, err => {\n      if (refresher) refresher.target.complete();\n      this.loaded = true;\n    });\n  }\n\n  applyFavorites() {\n    // set favorites\n    if (!this.favorites || this.favorites.length < 1 || !this.categories || this.categories.length < 1) return;\n    this.categories.forEach(category => {\n      if (this.favorites.indexOf(category['id']) != -1) category['favorite'] = true;\n    });\n  }\n\n  checkAll() {\n    // set check = false if have > 0 categories not favorites\n    let check: boolean = true;\n    this.categories.forEach(category => {\n      if (!category['favorite']) check = false;\n    });\n    // set all\n    this.categories.forEach(category => {\n      category['favorite'] = !check;\n    })\n  }\n\n  save() {\n    let favorites: Number[] = [];\n    this.categories.forEach(category => {\n      if (category['favorite']) favorites.push(category['id']);\n    });\n    this.storage.set('favorites', favorites).then(() => {\n      this.saved = true;\n      setTimeout(() => { this.saved = false }, 1000);\n      this.favorites = favorites;\n    })\n  }\n}\n"]}