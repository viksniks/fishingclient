{"version":3,"sources":["./src/app/pages/favorites-setting/favorites-setting.page.html","./src/app/pages/favorites-setting/favorites-setting-routing.module.ts","./src/app/pages/favorites-setting/favorites-setting.module.ts","./src/app/pages/favorites-setting/favorites-setting.page.scss","./src/app/pages/favorites-setting/favorites-setting.page.ts"],"names":[],"mappings":"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","file":"favorites-setting-favorites-setting-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar no-padding-important class=\\\"ion-no-padding\\\">\\n    <ion-item lines=\\\"none\\\">\\n      <ion-label>\\n        <span tappable primary (click)=\\\"checkAll()\\\">{{'favorites.chose'|translate}}</span>\\n      </ion-label>\\n      <ion-button size=\\\"small\\\" slot=\\\"end\\\" fill=\\\"outline\\\" [color]=\\\"saved?'primary':'dark'\\\" (click)=\\\"save()\\\">\\n        <span *ngIf=\\\"!saved\\\">{{'favorites.save'|translate}}</span>\\n        <span *ngIf=\\\"saved\\\">{{'favorites.saved'|translate}}</span>\\n      </ion-button>\\n    </ion-item>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <!-- Refresh -->\\n  <app-refresher slot=\\\"fixed\\\" [disabled]=\\\"!loaded\\\" (ionRefresh)=\\\"getCategories($event)\\\"></app-refresher>\\n  <!-- no data -->\\n  <app-no-data *ngIf=\\\"loaded && (!categories || categories.length < 1)\\\"></app-no-data>\\n  <!-- loading -->\\n  <app-loading *ngIf=\\\"!loaded\\\"></app-loading>\\n  <!-- list categories -->\\n  <ion-list *ngIf=\\\"categories && categories.length > 0\\\">\\n    <ion-item *ngFor=\\\"let category of categories\\\" lines=\\\"none\\\">\\n      <ion-label [innerHTML]=\\\"category.name\\\"></ion-label>\\n      <ion-checkbox [(ngModel)]=\\\"category.favorite\\\"></ion-checkbox>\\n    </ion-item>\\n  </ion-list>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { FavoritesSettingPage } from './favorites-setting.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FavoritesSettingPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FavoritesSettingPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { FavoritesSettingPageRoutingModule } from './favorites-setting-routing.module';\n\nimport { FavoritesSettingPage } from './favorites-setting.page';\nimport { ComponentsModule } from 'src/app/components/components.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ComponentsModule,\n    TranslateModule,\n    FavoritesSettingPageRoutingModule\n  ],\n  declarations: [FavoritesSettingPage]\n})\nexport class FavoritesSettingPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2Zhdm9yaXRlcy1zZXR0aW5nL2Zhdm9yaXRlcy1zZXR0aW5nLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { CoreService } from 'src/app/services/core.service';\nimport { Storage } from '@ionic/storage';\n\n@Component({\n  selector: 'app-favorites-setting',\n  templateUrl: './favorites-setting.page.html',\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./favorites-setting.page.scss'],\n})\nexport class FavoritesSettingPage implements OnInit {\n  // list categories id in favorites\n  favorites: Number[];\n  // list categories\n  categories: Object[];\n  // set true when loaded categories\n  loaded: boolean;\n  // set true when saved favorites to storage\n  saved: boolean;\n\n  constructor(\n    private storage: Storage,\n    private core: CoreService,\n  ) {\n    this.getFavorites();\n  }\n\n  ngOnInit() {\n  }\n\n  getFavorites() {\n    // get favorites from Storage\n    this.storage.get('favorites').then(res => {\n      this.favorites = res;\n      this.getCategories();\n    });\n  }\n\n  getCategories(refresher?) {\n    // request get categories from website\n    this.core.request('m_categories').subscribe(res => {\n      this.categories = res;\n      this.applyFavorites();\n      if (refresher) refresher.target.complete();\n      this.loaded = true;\n    }, err => {\n      if (refresher) refresher.target.complete();\n      this.loaded = true;\n    });\n  }\n\n  applyFavorites() {\n    // set favorites\n    if (!this.favorites || this.favorites.length < 1 || !this.categories || this.categories.length < 1) return;\n    this.categories.forEach(category => {\n      if (this.favorites.indexOf(category['id']) != -1) category['favorite'] = true;\n    });\n  }\n\n  checkAll() {\n    // set check = false if have > 0 categories not favorites\n    let check: boolean = true;\n    this.categories.forEach(category => {\n      if (!category['favorite']) check = false;\n    });\n    // set all\n    this.categories.forEach(category => {\n      category['favorite'] = !check;\n    })\n  }\n\n  save() {\n    let favorites: Number[] = [];\n    this.categories.forEach(category => {\n      if (category['favorite']) favorites.push(category['id']);\n    });\n    this.storage.set('favorites', favorites).then(() => {\n      this.saved = true;\n      setTimeout(() => { this.saved = false }, 1000);\n      this.favorites = favorites;\n    })\n  }\n}\n"],"sourceRoot":"webpack:///"}