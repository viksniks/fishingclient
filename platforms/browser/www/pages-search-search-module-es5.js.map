{"version":3,"sources":["webpack:///src/app/pages/search/search.page.html","webpack:///src/app/pages/search/search-routing.module.ts","webpack:///src/app/pages/search/search.module.ts","webpack:///src/app/pages/search/search.page.scss","webpack:///src/app/pages/search/search.page.ts"],"names":["routes","path","component","SearchPageRoutingModule","imports","forChild","exports","SearchPageModule","declarations","SearchPage","storage","core","alertCtrl","translate","route","search","show","page","get","subscribe","trans","id","snapshot","params","then","_keyword","over","posts","onSearch","keyword","infiniteScroll","searching","indexOf","unshift","searched","set","toLowerCase","t","Date","now","getPosts","length","concat","target","complete","err","create","header","message","buttons","text","handler","remove","alert","present","selector","template","encapsulation","None"],"mappings":"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","file":"pages-search-search-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar class=\\\"toolbar-searchbar-common\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/home\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-searchbar [(ngModel)]=\\\"_keyword\\\" (search)=\\\"doSearch()\\\" (ionClear)=\\\"_keyword=''; doSearch()\\\"\\n      [placeholder]=\\\"'search.search'|translate\\\" class=\\\"ion-text-start\\\">\\n      </ion-searchbar>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"show=!show\\\" [color]=\\\"show?'success':'primary'\\\" [disabled]=\\\"!search || search.length < 1\\\">\\n\\t\\t\\t\\t<ion-icon slot=\\\"icon-only\\\" name=\\\"time-outline\\\"></ion-icon>\\n\\t\\t\\t</ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content #content>\\n  <!-- history -->\\n  <div slot=\\\"fixed\\\" absolute top start size-full light-bg overflow *ngIf=\\\"show && search && search.length > 0\\\">\\n    <h5 place class=\\\"ion-text-center\\\">{{'search.history'|translate}}</h5>\\n    <ion-button *ngFor=\\\"let item of search\\\" fill=\\\"clear\\\" expand=\\\"block\\\" (click)=\\\"onSearch(item)\\\" text-ellipsis>\\n      <span>{{item}}</span>\\n    </ion-button>\\n  </div>\\n  <ion-button *ngIf=\\\"show && search && search.length > 0\\\"slot=\\\"fixed\\\" absolute bottom end (click)=\\\"clear()\\\" fill=\\\"clear\\\" color=\\\"danger\\\">\\n    <ion-icon slot=\\\"icon-only\\\" src=\\\"assets/svg/icon-clean.svg\\\"></ion-icon>\\n  </ion-button>\\n  <!-- no data -->\\n  <app-no-data *ngIf=\\\"searched && !searching && (!posts || posts.length < 1)\\\"></app-no-data>\\n  <!-- searching -->\\n  <app-loading *ngIf=\\\"searching\\\"></app-loading>\\n  <!-- List posts -->\\n  <app-list-posts *ngIf=\\\"posts\\\" [posts]=\\\"posts\\\"></app-list-posts>\\n  <app-infinite-scroll threshold=\\\"45%\\\" (ionInfinite)=\\\"load($event)\\\" *ngIf=\\\"!over && posts?.length > 0\\\"></app-infinite-scroll>\\n  <!-- Go to top -->\\n  <app-goto-top slot=\\\"fixed\\\" [content]=\\\"content\\\"></app-goto-top>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SearchPage } from './search.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SearchPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SearchPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SearchPageRoutingModule } from './search-routing.module';\n\nimport { SearchPage } from './search.page';\nimport { ComponentsModule } from 'src/app/components/components.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ComponentsModule,\n    TranslateModule,\n    SearchPageRoutingModule\n  ],\n  declarations: [SearchPage]\n})\nexport class SearchPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3NlYXJjaC9zZWFyY2gucGFnZS5zY3NzIn0= */\";","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { CoreService } from 'src/app/services/core.service';\nimport { AlertController } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Storage } from '@ionic/storage';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.page.html',\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./search.page.scss'],\n})\nexport class SearchPage implements OnInit {\n  // keyword input\n  _keyword: string;\n  // keyword search\n  keyword: string;\n  // search history from Storage\n  search: string[] = [];\n  // set true show History\n  show: boolean = false;\n  // category id if is search in category\n  id: Object;\n  // search results\n  posts: Object[];\n  // is searching show loading spinner\n  searching: boolean;\n  // set true when searched\n  searched: boolean;\n  // page of search results\n  page = 1;\n  // is over search\n  over: boolean;\n  // translate for this page\n  trans: Object;\n\n  constructor(\n    private storage: Storage,\n    private core: CoreService,\n    private alertCtrl: AlertController,\n    translate: TranslateService,\n    route: ActivatedRoute,\n  ) {\n    // get translate\n    translate.get('search').subscribe(trans => {\n      this.trans = trans;\n    });\n    // get params for search global or search in category\n    this.id = route.snapshot.params['id'];\n    // get search history\n    storage.get('search').then(search => {\n      if (search) this.search = search;\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  doSearch() {\n    if (!this._keyword) {\n      this.page = 1;\n      this.over = false;\n      this.posts = [];\n    } else this.onSearch(this._keyword);\n  }\n\n  onSearch(keyword?: string, infiniteScroll?: any) {\n    // search\n    // hide history\n    this.show = false;\n    // if isn't load more reset search results for new search\n    if (!infiniteScroll) {\n      this.page = 1;\n      this.over = false;\n      this.posts = [];\n      // show searching spinner\n      this.searching = true;\n    }\n    // prepare keyword\n    if (keyword) {\n      this.keyword = keyword;\n      this._keyword = keyword;\n    }\n    if (!this.keyword) return;\n    // prepare add to history\n    if (this.search.indexOf(this.keyword) == -1) {\n      this.search.unshift(this.keyword);\n      // limit store 20 history\n      // this.search = this.search.slice(0, 20);\n    }\n    this.searched = true;\n    // update history to Storage\n    this.storage.set('search', this.search).then(() => {\n      // prepare params request\n      let params = { search: this.keyword.toLowerCase(), t: Date.now(), page: this.page };\n      if (this.id) params['categories'] = this.id;\n      // request search posts with keyword\n      this.core.getPosts(params).subscribe(posts => {\n        // when request success\n        if (posts.length > 0) {\n          this.page++;\n          this.posts = this.posts.concat(posts);\n        } else this.over = true;\n        if (infiniteScroll) infiniteScroll.target.complete();\n        this.searching = false;\n      }, err => {\n        // when request error\n        this.searching = false;\n        if (infiniteScroll) infiniteScroll.target.complete();\n      });\n    }, err => this.searching = false);\n  }\n\n  load(infiniteScroll) {\n    // when scroll to bottom\n    this.onSearch(this.keyword, infiniteScroll);\n  }\n\n  async clear() {\n    // when click clear history\n    let alert = await this.alertCtrl.create({\n      header: this.trans['clear']['title'],\n      message: this.trans['clear']['message'],\n      buttons: [\n        {\n          text: this.trans['clear']['yes'],\n          handler: () => {\n            this.storage.remove('search').then(() => {\n              this.search = [];\n              this.show = false;\n            });\n          }\n        },\n        { text: this.trans['clear']['no'] }\n      ]\n    });\n    alert.present();\n  }\n}\n"]}